from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import InputFile, Message

import nav
from filters import IsAdmin, IsPrivate
from handlers.admin import ban_by_id
from loader import dp, bot
from aiogram import types

from middlewares.database import MainDB
from states.states import Broadcast
from backend.helpers import del_message


@dp.message_handler(Command('broadcast'), IsPrivate())
@dp.message_handler(Text(equals=['–ö—Ä–∏—á–∞—Ç—å', '–û—Ä–∞—Ç—å', '–í–∏–∑–∂–∞—Ç—å', '–ü–∏–∑–¥–µ—Ç—å', '–ö—Ä–∏—á–∞–ª–∫–∞ –Ω–∞ —é–∑–µ—Ä–æ–≤']), IsPrivate())
async def broadcast(message: Message):
    if message.from_user.id not in MainDB.users_ids():
        await message.answer('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫—Ä–∏—á–∞—Ç—å, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–∏:\n/start')
        return

    user_turp = MainDB.userturple_by_id(str(message.from_user.id))
    user_bans = user_turp[0][3]
    if user_bans >= 5:
        await message.answer(
            f'–ü—Ö–∞—Ö–∞—Ö, —á–µ–ª, —Ç—ã –≤ –º—É—Ç–µ :) –ò–∑ –¥–µ—Ä–µ–≤–Ω–∏ —Ç–µ–±—è –¥–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞ –ª—É–Ω—É, –ø–æ—Ç–æ–º—É —á—Ç–æ —É —Ç–µ–±—è {user_bans} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π')
        return

    await message.answer('–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –≤—Å–µ–º —Å–∫–∞–∑–∞—Ç—å, —è —Å–ª—É—à–∞—é...', reply_markup=nav.broadcasting_menu)
    await Broadcast.Enter.set()


@dp.message_handler(state=Broadcast.Enter)
async def broadcast(message: types.Message, state: FSMContext):
    users = MainDB.select_all_users()

    user_turp = MainDB.userturple_by_id(str(message.from_user.id))
    user_bans = user_turp[0][3]

    if message.text == 'üåº –ó–∞–∫—Ä—ã—Ç—å –≤–∞—Ä–µ–∂–∫—É –∏ —Å–¥–æ—Ö–Ω—É—Ç—å üå∏':
        await message.answer('üìû–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–≤–æ—ë –µ–±–∞–ª–æ —Å–∂–∞—Ç–æ –∏ —Å–∫–æ–º–ø—Ä–µ—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ –º–∏–Ω–∏–º—É–º–∞ üîá \n'
                             '–í –¥–µ—Ä–µ–≤–Ω–µ —Ç–µ–ø–µ—Ä—å —Ç–∏—Ö–æ –∏ —Å–ø–æ–∫–æ–π–Ω–æ –±–µ–∑ —Ç–∞–∫–æ–≥–æ –¥–æ–ª–±–æ—ë–±–∞ –∫–∞–∫ —Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ —Ä–æ—Ç –æ—Ç–∫—Ä—ã–ª '
                             '–∏ –∑–∞–∫—Ä—ã–ª, –Ω—É —Ç—ã –∏ –ø–æ–ø—É—Å–∫ –∫–æ—Ä–æ—á–µ :/', reply_markup=nav.base_menu)
        await state.finish()
        return
    if message.text[0] == '/':
        ban_by_id(message.from_user.id)

        user_turp = MainDB.userturple_by_id(str(message.from_user.id))
        user_bans = user_turp[0][3]

        await message.answer(f'üí¢‡≤†_‡≤†üí¢\n'
                             f'üò°–ê–≥–∞, –•–∞—Ü–∫–µ—Ä —Ö—É–µ–≤, –µ—â—ë —Ä–∞–∑ —Ç–∞–∫ –ø–æ—à—É—Ç–∏—à—å —è —Ç–µ–±—è –ø–∏–∑–¥–∞–Ω—É –∏ –≤ –±–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª—é!üí¢\n'
                             f'–£ —Ç–µ–±—è –∏—Ç–∞–∫ —É–∂–µ [{user_bans}/5] –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π! –ê–∫–∫—É—Ä–∞—Ç–Ω–µ–π —Å —è–∑—ã–∫–æ–º!\n'
                             f'üòù–ö–æ–º–∞–Ω–¥—ã –±—É–¥–µ—à—å –Ω–∞ —Ä—ã–Ω–∫–µ –≤–≤–æ–¥–∏—Ç—å, –∞ —Ç—É—Ç –¥–µ—Ä–µ–≤–Ω—è! –ü—Ä–∏–ª–∏—á–Ω–∞—è –æ–±—â–∏–Ω–∞!üòá', reply_markup=nav.base_menu)
        await state.finish()
        return
    print(users)
    for user_entity in users:
        await bot.send_message(chat_id=user_entity[0], text=f'–ö–æ—Ç {message.from_user.full_name} –ø—Ä–æ–∫—Ä–∏—á–∞–ª –Ω–∞ –≤—Å—é –¥–µ—Ä–µ–≤–Ω—é: \n<b>{message.text}</b>')

    msg = await message.answer('–¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–æ—Å–ª–∞–Ω–Ω–æ —ç—Ç–∏–º –Ω–∏–∫–∞–º: ' + ', '.join([f"@{x[1]}" for x in users]), reply_markup=nav.base_menu)
    await state.finish()

    await del_message(msg, 500)



